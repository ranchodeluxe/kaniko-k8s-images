---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-busybox-latest-8a65dd483c
  namespace: argocd
data:
  dockerfile: |
    FROM busybox:latest
    ENV VERSION=0.0.11
    ENTRYPOINT ["/busybox/sh", "-ec", "sleep 2000"]
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-python-buster-ac80d1c7c5
  namespace: argocd
data:
  dockerfile: |
    FROM python:buster
    ENV VERSION=0.0.13
    ENTRYPOINT ["python", "-m", "http.server 9999"]
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-ubuntu-lunar-f833fb321d
  namespace: argocd
data:
  dockerfile: |
    FROM ubuntu:lunar
    ENV VERSION=0.0.15
    
    # Set locale non-interactively
    ARG DEBIAN_FRONTEND=noninteractive
    ENV LANG C.UTF-8
    
    RUN apt-get -y update \
        && apt-get install -y --no-install-recommends \
                apt-utils \
                build-essential \
                curl \
                binutils \
                git \
                jq \
                locales \
                tzdata \
                wget \
        && apt-get clean -y \
        && rm -rf /var/lib/apt/lists/*
    
    # Set locale non-interactively
    RUN echo "America/Los_Angeles" > /etc/timezone \
        && dpkg-reconfigure -f noninteractive tzdata \
        && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
        && echo 'LANG="en_US.UTF-8"' > /etc/default/locale \
        && dpkg-reconfigure --frontend=noninteractive locales \
        && update-locale LANG=en_US.UTF-8
    
    
    #####################################
    # requirements install
    #####################################
    ENV APPLICATION_ROOT=/tmp \
        LANG=en_US.UTF-8 \
        LANGUAGE=en_US:en \
        LC_ALL=en_US.UTF-8 \
        TERM=linux \
        TERMINFO=/etc/terminfo
    
    WORKDIR $APPLICATION_ROOT
    ENTRYPOINT ["/bin/bash", "-c", "echo Hello from Kaniko"]
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: Deployment
metadata:
  name: deployment-busybox-latest-8a65dd483c
  namespace: argocd
  labels:
    app: kaniko-deployment-busybox-latest-8a65dd483c
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kaniko-deployment-busybox-latest-8a65dd483c
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: kaniko-deployment-busybox-latest-8a65dd483c
       # uncomment for TTL self termination
#      annotations:
#        "kubectl.kubernetes.io/deployment-revision": "8a65dd483c"
#        "ttl": "432000s" # five days
    spec:
      restartPolicy: Never
      containers:
      - name:  pod-deploy-busybox-latest-8a65dd483c
        image: gcr.io/kaniko-project/executor:debug
        args: [
                 "--context=dir://workspace",
                 "--destination=gcorradini2023/busybox-latest:0.0.11",
                 "--dockerfile=./workspace/Dockerfile"
        ]
        volumeMounts:
          - name: dockerhub-regcred-secret
            mountPath: /kaniko/.docker
          - name: dockerfile-volume
            mountPath: /workspace/workspace
      volumes:
        - name: dockerhub-regcred-secret
          secret:
            secretName: dockerhub-regcred
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: dockerfile-volume
          configMap:
            name: configmap-busybox-latest-8a65dd483c
            items:
              - key: dockerfile
                path: Dockerfile
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: Deployment
metadata:
  name: deployment-python-buster-ac80d1c7c5
  namespace: argocd
  labels:
    app: kaniko-deployment-python-buster-ac80d1c7c5
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kaniko-deployment-python-buster-ac80d1c7c5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: kaniko-deployment-python-buster-ac80d1c7c5
       # uncomment for TTL self termination
#      annotations:
#        "kubectl.kubernetes.io/deployment-revision": "ac80d1c7c5"
#        "ttl": "432000s" # five days
    spec:
      restartPolicy: Never
      containers:
      - name:  pod-deploy-python-buster-ac80d1c7c5
        image: gcr.io/kaniko-project/executor:debug
        args: [
                 "--context=dir://workspace",
                 "--destination=gcorradini2023/python-buster:0.0.13",
                 "--dockerfile=./workspace/Dockerfile"
        ]
        volumeMounts:
          - name: dockerhub-regcred-secret
            mountPath: /kaniko/.docker
          - name: dockerfile-volume
            mountPath: /workspace/workspace
      volumes:
        - name: dockerhub-regcred-secret
          secret:
            secretName: dockerhub-regcred
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: dockerfile-volume
          configMap:
            name: configmap-python-buster-ac80d1c7c5
            items:
              - key: dockerfile
                path: Dockerfile
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: Deployment
metadata:
  name: deployment-ubuntu-lunar-f833fb321d
  namespace: argocd
  labels:
    app: kaniko-deployment-ubuntu-lunar-f833fb321d
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kaniko-deployment-ubuntu-lunar-f833fb321d
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: kaniko-deployment-ubuntu-lunar-f833fb321d
       # uncomment for TTL self termination
#      annotations:
#        "kubectl.kubernetes.io/deployment-revision": "f833fb321d"
#        "ttl": "432000s" # five days
    spec:
      restartPolicy: Never
      containers:
      - name:  pod-deploy-ubuntu-lunar-f833fb321d
        image: gcr.io/kaniko-project/executor:debug
        args: [
                 "--context=dir://workspace",
                 "--destination=gcorradini2023/ubuntu-lunar:0.0.15",
                 "--dockerfile=./workspace/Dockerfile"
        ]
        volumeMounts:
          - name: dockerhub-regcred-secret
            mountPath: /kaniko/.docker
          - name: dockerfile-volume
            mountPath: /workspace/workspace
      volumes:
        - name: dockerhub-regcred-secret
          secret:
            secretName: dockerhub-regcred
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: dockerfile-volume
          configMap:
            name: configmap-ubuntu-lunar-f833fb321d
            items:
              - key: dockerfile
                path: Dockerfile
