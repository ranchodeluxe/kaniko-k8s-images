---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kaniko-get-list-pod-serviceaccount
  namespace: argocd
automountServiceAccountToken: true
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: kubectl-installation-debian
  namespace: argocd
data:
  kubectl-install-script: |
    #!/bin/sh
    #set -euo pipefail

    apt update \
     && apt -y install ca-certificates curl \
     && curl -Lk "https://dl.k8s.io/release/v1.25.0/bin/linux/amd64/kubectl" --output /usr/local/sbin/kubectl \
     && chmod 777 /usr/local/sbin/kubectl
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-busybox-latest-8a65dd483c
  namespace: argocd
data:
  dockerfile: |
    FROM busybox:latest
    ENV VERSION=0.0.11
    ENTRYPOINT ["/busybox/sh", "-ec", "sleep 2000"]
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-python-buster-ac80d1c7c5
  namespace: argocd
data:
  dockerfile: |
    FROM python:buster
    ENV VERSION=0.0.13
    ENTRYPOINT ["python", "-m", "http.server 9999"]
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: configmap-ubuntu-lunar-f833fb321d
  namespace: argocd
data:
  dockerfile: |
    FROM ubuntu:lunar
    ENV VERSION=0.0.15
    
    # Set locale non-interactively
    ARG DEBIAN_FRONTEND=noninteractive
    ENV LANG C.UTF-8
    
    RUN apt-get -y update \
        && apt-get install -y --no-install-recommends \
                apt-utils \
                build-essential \
                curl \
                binutils \
                git \
                jq \
                locales \
                tzdata \
                wget \
        && apt-get clean -y \
        && rm -rf /var/lib/apt/lists/*
    
    # Set locale non-interactively
    RUN echo "America/Los_Angeles" > /etc/timezone \
        && dpkg-reconfigure -f noninteractive tzdata \
        && sed -i -e 's/# en_US.UTF-8 UTF-8/en_US.UTF-8 UTF-8/' /etc/locale.gen \
        && echo 'LANG="en_US.UTF-8"' > /etc/default/locale \
        && dpkg-reconfigure --frontend=noninteractive locales \
        && update-locale LANG=en_US.UTF-8
    
    
    #####################################
    # requirements install
    #####################################
    ENV APPLICATION_ROOT=/tmp \
        LANG=en_US.UTF-8 \
        LANGUAGE=en_US:en \
        LC_ALL=en_US.UTF-8 \
        TERM=linux \
        TERMINFO=/etc/terminfo
    
    WORKDIR $APPLICATION_ROOT
    ENTRYPOINT ["/bin/bash", "-c", "echo Hello from Kaniko"]
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kaniko-pod-reader-role
  namespace: argocd
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["get", "list"]
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kaniko-pod-reader-role-binding
  namespace: argocd
subjects:
- kind: ServiceAccount
  name: kaniko-get-list-pod-serviceaccount
  namespace: argocd
roleRef:
  kind: Role
  name: kaniko-pod-reader-role
  apiGroup: rbac.authorization.k8s.io
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: job-busybox-latest-8a65dd483c
  namespace: argocd
  labels:
    app: kaniko-job
spec:
# ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: Never
      # next two lines bind service account to Pod
      serviceAccountName: kaniko-get-list-pod-serviceaccount
      automountServiceAccountToken: true
      containers:
      - name:  pod-job-busybox-latest-8a65dd483c
        image: gcr.io/kaniko-project/executor:debug
        args: [
                 "--context=dir://workspace",
                 "--destination=gcorradini2023/busybox-latest:0.0.11",
                 "--dockerfile=Dockerfile"
        ]
        volumeMounts:
          - name: dockerhub-regcred-secret
            mountPath: /kaniko/.docker
          - name: dockerfile-volume
            mountPath: /workspace
          - name: kubectl-installation-debian
            mountPath: /usr/local/bin/
      volumes:
        - name: dockerhub-regcred-secret
          secret:
            secretName: dockerhub-regcred
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: dockerfile-volume
          configMap:
            name: configmap-busybox-latest-8a65dd483c
            items:
              - key: dockerfile
                path: Dockerfile
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: job-python-buster-ac80d1c7c5
  namespace: argocd
  labels:
    app: kaniko-job
spec:
# ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: Never
      # next two lines bind service account to Pod
      serviceAccountName: kaniko-get-list-pod-serviceaccount
      automountServiceAccountToken: true
      containers:
      - name:  pod-job-python-buster-ac80d1c7c5
        image: gcr.io/kaniko-project/executor:debug
        args: [
                 "--context=dir://workspace",
                 "--destination=gcorradini2023/python-buster:0.0.13",
                 "--dockerfile=Dockerfile"
        ]
        volumeMounts:
          - name: dockerhub-regcred-secret
            mountPath: /kaniko/.docker
          - name: dockerfile-volume
            mountPath: /workspace
          - name: kubectl-installation-debian
            mountPath: /usr/local/bin/
        lifecycle:
          postStart:
            exec:
              command: [ "/bin/sh", "-c", "kubectl-install-script.sh && if [ $(kubectl get pods -o jsonpath='{.status.containerStatuses[0].state.terminated.reason}' $HOSTNAME) = Completed ]; then exit 0; else exit 1; fi" ]
      volumes:
        - name: dockerhub-regcred-secret
          secret:
            secretName: dockerhub-regcred
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: dockerfile-volume
          configMap:
            name: configmap-python-buster-ac80d1c7c5
            items:
              - key: dockerfile
                path: Dockerfile
        - name: kubectl-installation-debian
          configMap:
            name: kubectl-installation-debian
            items:
              - key: kubectl-install-script
                path: kubectl-install-script.sh
                mode: 0777
---
# Source: manifest-builder/templates/manifests.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: job-ubuntu-lunar-f833fb321d
  namespace: argocd
  labels:
    app: kaniko-job
spec:
# ttlSecondsAfterFinished: 300
  template:
    spec:
      restartPolicy: Never
      # next two lines bind service account to Pod
      serviceAccountName: kaniko-get-list-pod-serviceaccount
      automountServiceAccountToken: true
      containers:
      - name:  pod-job-ubuntu-lunar-f833fb321d
        image: gcr.io/kaniko-project/executor:debug
        args: [
                 "--context=dir://workspace",
                 "--destination=gcorradini2023/ubuntu-lunar:0.0.15",
                 "--dockerfile=Dockerfile"
        ]
        volumeMounts:
          - name: dockerhub-regcred-secret
            mountPath: /kaniko/.docker
          - name: dockerfile-volume
            mountPath: /workspace
          - name: kubectl-installation-debian
            mountPath: /usr/local/bin/
        lifecycle:
          postStart:
            exec:
              command: [ "/bin/sh", "-c", "kubectl-install-script.sh && if [ $(kubectl get pods -o jsonpath='{.status.containerStatuses[0].state.terminated.reason}' $HOSTNAME) = Completed ]; then exit 0; else exit 1; fi" ]
      volumes:
        - name: dockerhub-regcred-secret
          secret:
            secretName: dockerhub-regcred
            items:
              - key: .dockerconfigjson
                path: config.json
        - name: dockerfile-volume
          configMap:
            name: configmap-ubuntu-lunar-f833fb321d
            items:
              - key: dockerfile
                path: Dockerfile
        - name: kubectl-installation-debian
          configMap:
            name: kubectl-installation-debian
            items:
              - key: kubectl-install-script
                path: kubectl-install-script.sh
                mode: 0777
