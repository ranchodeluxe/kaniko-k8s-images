name: deploy

on:
  push:
    branches:
      - main

jobs:
  build_manifests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/setup-helm@v3

      - name: get HEAD sha
        id: commitsha_head
        run: |
          TEMP=$(git rev-parse HEAD)
          echo "############################################"
          echo $TEMP
          echo "############################################"
          echo "GIT_REV_HEAD=$TEMP" >> $GITHUB_OUTPUT
      - name: copy all Dockerfils to helm builder
        id: copydockerfiles
        run: |
          ls -lah
          rm -rf ./manifest-builder/dockerfile_inputs
          cp -r ./images ./manifest-builder/dockerfile_inputs
          TEMP=$(ls ./manifest-builder/dockerfile_inputs)
          echo "############################################"
          echo $TEMP
          echo "############################################"
      - name: find all Dockerfiles && create a helm values file dynamically
        id: valuesfile
        run: |
          DOCKERFILES=$(find $PWD/manifest-builder/dockerfile_inputs/* -name "Dockerfile")
          VALUESFILE=./manifest-builder/values.yaml
          touch $VALUESFILE
          printf "versionLookup:\n" >> $VALUESFILE
          while read DOCKERFILE_PATH; do
            BASE_KEY=$(echo $DOCKERFILE_PATH | sed 's/:/-/g')
            # TODO: this needs to be a semvar thing in the future
            VERSION=$((1 + $RANDOM % 100))
            KEY_AND_VALUE="$BASE_KEY: 0.0.$VERSION"
            printf "  %s\n" $KEY_AND_VALUE >> $VALUESFILE
          done < <(echo "$DOCKERFILES")
          echo "############################################"
          echo cat $VALUESFILE
          echo "############################################"
          echo "VALUESFILE=$VALUESFILE" >> $GITHUB_OUTPUT
      - name: build helm templates
        id: helmbuild
        run: |
          VALUESFILE=${{ steps.valuesfile.outputs.VALUESFILE }}
          cd ./manifest-builder
          helm template -s templates/manifests.yaml . -f $VALUESFILES > ../deploy/manifests.yaml
          echo "############################################"
          echo cat ../deploy/manifests.yaml
          echo "############################################"
#      - name: commit ./deploy changes back
#        id: commitback
#        run: |
#          git config --global user.name 'helmdeployuser'
#          git config --global user.email 'helmdeployuser@users.noreply.github.com'
#          VERSION=$((1 + $RANDOM % 100))
#          git commit -am "deploy update $VERSION"
#          git push origin main




