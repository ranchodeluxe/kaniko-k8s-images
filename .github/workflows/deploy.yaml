name: deploy

on:
  push:
    branches:
      - main

jobs:
  build_manifests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: azure/setup-helm@v3

      - name: get HEAD sha
        id: commitsha_head
        run: |
          TEMP=$(git rev-parse HEAD)
          echo "############################################"
          echo $TEMP
          echo "############################################"
          echo "GIT_REV_HEAD=$TEMP" >> $GITHUB_OUTPUT
      - name: copy all Dockerfils to helm builder
        id: copydockerfiles
        run: |
          ls -lah
          rm -rf ./manifest-builder/dockerfile_inputs
          cp -r ./images ./manifest-builder/dockerfile_inputs
          TEMP=$(ls ./manifest-builder/dockerfile_inputs)
          echo "############################################"
          echo $TEMP
          echo "############################################"
      - name: find all Dockerfiles && create a helm values file dynamically
        id: valuesfile
        run: |
          cd ./manifest-builder
          DOCKERFILES=$(find dockerfile_inputs/* -name "Dockerfile")
          cd ../
          VALUESFILE=./manifest-builder/values.yaml
          echo "" > $VALUESFILE
          printf "versionLookup:\n" >> $VALUESFILE
          while read DOCKERFILE_PATH; do
            BASE_KEY=$(echo $DOCKERFILE_PATH | sed 's/:/-/g')
            VERSION=$(cat ./manifest-builder/$DOCKERFILE_PATH | grep VERSION | cut -d'=' -f 2)
            printf "  $BASE_KEY: $VERSION" >> $VALUESFILE
          done < <(echo "$DOCKERFILES")
          echo "############################################"
          cat $VALUESFILE
          echo "############################################"
          echo "VALUESFILE=$VALUESFILE" >> $GITHUB_OUTPUT
      - name: build helm templates
        id: helmbuild
        run: |
          cd ./manifest-builder
          helm template -s templates/manifests.yaml . -f values.yaml > ../deploy/manifests.yaml
          echo "############################################"
          cat ../deploy/manifests.yaml
          echo "############################################"
      - name: commit ./deploy changes back
        uses: EndBug/add-and-commit@v7
        with:
          default_author: github_actions





